plugins {
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id "com.github.johnrengelman.shadow" version "6.0.0"
    id 'com.github.ben-manes.versions' version '0.29.0'
}

apply plugin:"application"
apply plugin:"java"

version "0.1"
group "hello.world"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

ext {
    jacksonVersion = '2.11.1'
}

dependencyManagement {
    imports {
       mavenBom('io.micronaut:micronaut-bom:2.0.1') {
            bomProperty 'rxjava2.version', '2.2.13'
            bomProperty 'reactor.version', '3.3.8.RELEASE'
            bomProperty 'swagger.version', '2.1.4'
            bomProperty 'slf4j.version', '2.0.0-alpha1'
            bomProperty 'snakeyaml.version', '1.26'
            bomProperty 'jackson.version', jacksonVersion
            bomProperty 'jackson.modules.version', jacksonVersion
            bomProperty 'jackson.datatype.version', jacksonVersion
            bomProperty 'micronaut.openapi.version', '1.5.2'
            bomProperty 'netty.version', '4.1.51.Final'
        }
    }
    dependencies {
        dependency 'io.github.classgraph:classgraph:4.8.87'
        dependency 'io.micronaut.views:micronaut-views-handlebars:2.0.0'
        dependency('ch.qos.logback:logback-classic:1.3.0-alpha5') {
            exclude 'com.sun.mail:javax.mail'
        }
    }
}

dependencies {
    annotationProcessor 'io.micronaut:micronaut-inject-java'
    annotationProcessor 'io.micronaut:micronaut-validation'
    annotationProcessor 'io.micronaut.configuration:micronaut-openapi'
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    implementation 'io.micronaut:micronaut-http-client'
    implementation 'io.micronaut:micronaut-http-server-netty'
    implementation 'io.micronaut:micronaut-inject'
    implementation 'io.micronaut:micronaut-runtime'
    implementation 'io.micronaut:micronaut-validation'
    implementation 'io.micronaut.views:micronaut-views-handlebars'
    implementation 'io.projectreactor:reactor-core'
    compileOnly "io.micronaut:micronaut-inject-java"
    compileOnly 'io.swagger.core.v3:swagger-annotations'
    compileOnly 'io.swagger.core.v3:swagger-core'
    runtime "ch.qos.logback:logback-classic"
    runtime 'com.github.jknack:handlebars:4.2.0'
    testCompile "junit:junit:4.13"
    testCompile "io.micronaut:micronaut-inject-java"

    implementation 'io.github.classgraph:classgraph'
}


shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "hello.world.Application"

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
